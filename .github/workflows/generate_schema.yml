name: Generate API Schema

on:
  workflow_call:
    outputs:
      api_schema:
        description: "The the open api 3 schema as json"
        value: ${{ jobs.generate_api_schema.outputs.schema }}
    secrets:
      DEPLOY_USER:
        required: true
      DEPLOY_TOKEN: 
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate_api_schema:
    name: "Update storeapi.json"
    runs-on: ubuntu-latest
    container: "shopware/development:8.1-composer-2"
    outputs:
      schema: ${{ steps.step4.outputs.schema }}
    env:
      APP_ENV: prod
      DATABASE_URL: mysql://root:root@database:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: devsecret
      BLUE_GREEN_DEPLOYMENT: 0

    services:
      database:
        image: mysql:5.7
        env:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: root

    steps:    
    - name: Checkout Shopware
      uses: actions/checkout@v3
      with:
          repository: shopware/platform
          ref: trunk
          fetch-depth: 0
    - name: checkout latest release
      run: |
        git checkout $(git tag | tr '.' ' ' | sort -nr -k3,4 | head -n1 | tr ' ' '.')
        
    - name: checkout commercial plugin
      env:
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
      run: |
        git clone https://${DEPLOY_USER}:${DEPLOY_TOKEN}@gitlab.shopware.com/shopware/6/product/commercial.git custom/plugins/SwagCommercial
        
    - name: Generate storeapi.json
      run: |
        composer install -o
        composer run init:db
        ./bin/console plugin:install -a SwagCommercial 
        ./bin/console framework:schema -s openapi3 --store-api storeapi.json
        sed 's!\\/!/!g' -i storeapi.json
        echo 'set-output name=schema::'$(cat storeapi.json | base64)
        echo '::set-output name=schema::'"$(cat storeapi.json | base64)"
